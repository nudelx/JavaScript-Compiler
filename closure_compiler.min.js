#!/usr/bin/env node

/*
*  Author: Alex Nudelman
*  Version: 1.0
*  Git: https://github.com/nudelx
*  2014
*/





(function(){var e={init:function(){this.args={};this.arrayArgs=process.argv.slice(2);this.FS=require("fs");this.QS=require("querystring");this.HTTP=require("http");this.GOOGLE={URL:"closure-compiler.appspot.com",METHOD:"POST",PATH:"/compile",REQUEST:{js_code:null,compilation_level:"SIMPLE_OPTIMIZATIONS",output_format:"json",output_info:["compiled_code","statistics","warnings","errors"],warning_level:"default",output_file_name:"default-min.js"}};this.args=this.buildArgsObject(this.arrayArgs)},buildArgsObject:function(a){var d=
        this;a.forEach(function(c,b){b%2&&(d.args[a[b-1]]=c)});this.readJsFile()},readJsFile:function(){if(this.args["-f"])try{this.fileIn=this.FS.readFileSync(this.args["-f"],"utf8")}catch(a){console.dir("Error reading file =>  "+a.message),process.exit(1)}else this.help();this.sendFile()},sendFile:function(){var a=this,d=this.args["-o"]||this.args["-f"]+".compiled.js";this.GOOGLE.REQUEST.js_code=this.fileIn;var c=this.QS.stringify(this.GOOGLE.REQUEST),b=this.HTTP.request({host:this.GOOGLE.URL,port:80,method:this.GOOGLE.METHOD,
                path:this.GOOGLE.PATH,headers:{"Content-Type":"application/x-www-form-urlencoded","Content-Length":c.length}},function(b){b.setEncoding("utf8");var c="";b.on("data",function(a){c+=a});b.on("end",function(b){a.writeToFile.call(a,c,d)});b.on("error",function(a){console.log("Error");console.dir(a)})});b.write(c);b.end()},writeToFile:function(a,d){var c=JSON.parse(a);this.FS.writeFile("./"+d,c.compiledCode,function(a){a&&console.log("Error writing to file ...")});e.consoleOutput(c,d)},consoleOutput:function(a,
                d){var c="successfully Done",b="\u001b[32m";a.warnings?b="\u001b[33m":a.errors&&(c="Failed",b="\u001b[31m");console.log(" ");console.log(b);console.log("\t\t Compilation "+c+" !!!");console.log("============================================================");console.log(" ");console.log("Output File: "+d);console.log(" ");console.log("------------------------------------");console.log(" ");console.log("Compilation statistics: ");console.dir(a.statistics);console.log(" ");["warnings","errors"].forEach(function(b){a[b]&&
                        (console.log(b+": "+a[b].length),console.log("------------------------------------"),console.dir(a[b]))});console.log("\u001b[38m")},help:function(){console.log("\u001b[2J");console.log(" ");console.log(" ");console.log("Welcome to Simple JavaScript Compiler ");console.log("Based on google closure compiler  ");console.log("Author: Alex Nudelman ");console.log("Version: v.1.0  2014");console.log("===========================================================================");console.log(" ");console.log("This script will check your javascript syntax for warnings and errors, ");
                        console.log("optimize it and compress it.");console.log(" ");console.log("What are the benefits of using Closure Compiler?");console.log(" ");console.log("Efficiency - The Closure Compiler reduces the size of your JavaScript files  ");console.log("and makes them more efficient, helping your application to load faster and reducing your bandwidth needs.");console.log(" ");console.log("Code checking - The Closure Compiler provides warnings for illegal JavaScript and warnings for potentially dangerous operations, ");
                        console.log("helping you to produce JavaScript that is less buggy and easier to maintain.");console.log("for more info visit http://closure-compiler.appspot.com");console.log(" ");console.log(" ");console.log("Usage: ");console.log(" ");console.log("./closure_compiler -f my-javascrit-file.js  -o my.min.compied.file.js");console.log(" ");console.log("-f | file name to compile ");console.log("-o | output file name ( optional ) ");console.log("\n\n\n\n\n\n");process.exit(1)}};e.init()})();
